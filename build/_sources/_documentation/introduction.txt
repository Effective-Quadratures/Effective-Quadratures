Effective Quadratures
========================================

Overview
--------------
Effective Quadratures is an open-source Python-based library that supports a wide range of utilities in *uncertainty quantification*, *dimension reduction*, *sensitivity analysis* and *optimisation*---all using polynomials. The project was initially born out of a need to replicate the results of various works within the field of polynomial chaos. It has subsequently morphed into a dedicated effort to use polynomials for a range of objectives under the broad umbrella of **supervised machine learning**. 

The primary developers are academics at the `University of Cambridge <http://www.cam.ac.uk>`__, with advisory support from `Stanford University <http://www.stanford.edu>`__, `Universita degli Studi di Cagliari <https://unica.it/unica/>`__, and the `University of Utah <http://www.utah.edu>`__. The project is under active development and we use Travis and Coveralls for testing.

.. image:: https://travis-ci.org/Effective-Quadratures/Effective-Quadratures.svg?branch=master
	:target: https://travis-ci.org/Effective-Quadratures/

.. image:: https://coveralls.io/repos/github/Effective-Quadratures/Effective-Quadratures/badge.svg?branch=master
	:target: https://coveralls.io/github/Effective-Quadratures/Effective-Quadratures?branch=master


Download Links
---------------
To download the code, please visit `www.effective-quadratures.org <http://www.effective-quadratures.org>`__. Click either on the *Fork Code* button or the Github link.

**Installation:**
For installation on Mac and Linux systems, simply type the following into the terminal. 

.. code::
	
	sudo python setup.py install

For installation on Windows, you will need `Anaconda <https://www.continuum.io/downloads#windows>`__; select the Python 2.7 option. Upon successful installation, open the Sypder IDE and go into the Effective-Quadratures-master directory and type the following in the command window

.. code::

	python setup.py install

This should build the code. Just make sure you include the location of effective_quadratures folder to your python file and you should be good to go. To run this code you will require python 2.7, numpy, scipy and matplotlib. 


References
-----------

.. [1] Seshadri, P., Iaccarino, G., Ghisu, T. Quadrature Strategies for Constructing Polynomial Approximations. [To appear in Springer shortly]. Preprint available: `Paper <https://arxiv.org/abs/1805.07296>`__

.. [2] Seshadri, P., Narayan, A., Sankaran M. Effectively Subsampled Quadratures for Least Squares Polynomial Approximations." SIAM/ASA Journal on Uncertainty Quantification 5.1 (2017): 1003-1023. `Paper <https://epubs.siam.org/doi/abs/10.1137/16M1057668>`__

.. [3] Seshadri, P., Parks, G. T., Effective-Quadratures (EQ): Polynomials for Computational Engineering Studies, Journal of Open Source Software, 2(11), 166, `Paper <http://joss.theoj.org/papers/ba651f2b3608a5d2b085af06b1108747>`__
